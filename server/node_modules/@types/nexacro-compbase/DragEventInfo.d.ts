// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    DragEventInfo: nexacro.DragEventInfo;
}

    
declare namespace nexacro {
    
	interface DragEventInfo extends nexacro.EventInfo {
	    /**
		 * @constructor
		 */
		new(): nexacro.DragEventInfo;
	    /**
		 * This property holds a value indicating whether an event occurred with the Alt key pressed.
		 */
		readonly altkey?: any;
		/**
		 * This read-only property holds information on a button or touch that fired an event.
		 */
		readonly button?: any;
		/**
		 * This property holds the x-coordinate of the point where you clicked or touched when an event occurred, calculated based on the area of an entire component.
		 */
		readonly canvasx?: any;
		/**
		 * This property holds the y-coordinate of the point where you clicked or touched when an event occurred, calculated based on the area of an entire component.
		 */
		readonly canvasy?: any;
		/**
		 * This property holds the x-coordinate of the point where you clicked or touched when an event occurred, calculated based on the client area of a component.
		 */
		readonly clientx?: any;
		/**
		 * This property holds the y-coordinate of the point where you clicked or touched when an event occurred, calculated based on the client area of a component.
		 */
		readonly clienty?: any;
		/**
		 * This property holds a value indicating whether an event occurred with a Control key pressed.
		 */
		readonly ctrlkey?: any;
		/**
		 * This read-only property holds the location where a dragging action begins.
		 */
		readonly datatype?: string;
		/**
		 * This read-only property holds the ID of an event.
		 */
		readonly eventid?: any;
		/**
		 * This read-only property holds an array containing the information on the files that are dragged from outside the application.
		 */
		readonly filelist?: object;
		/**
		 * This property holds an event-triggering component.
		 */
		readonly fromobject?: object;
		/**
		 * This property holds the component or subcontrol that triggered an event.
		 */
		readonly fromreferenceobject?: object;
		readonly metakey?: any;
		/**
		 * This property holds the x-coordinate of the point where the monitor is clicked or touched. The coordinate is calculated based on the monitor area.
		 */
		readonly screenx?: any;
		/**
		 * This property holds the y-coordinate of the point where the monitor is clicked or touched. The coordinate is calculated based on the monitor area.
		 */
		readonly screeny?: any;
		/**
		 * This property holds a value indicating whether an event occurred with the shift key pressed.
		 */
		readonly shiftkey?: any;
		/**
		 * This property holds the component where a mouse dragging operation occurred for the first time.
		 */
		readonly sourceobject?: object;
		/**
		 * This property holds the component or subcontrol where a mouse dragging operation occurred for the first time.
		 */
		readonly sourcereferenceobject?: object;
		/**
		 * This is a property whose value can be set by users in a dragging-related event.
		 */
		readonly userdata?: object;
		/**
		 * @param {object} v This is a property whose value can be set by users in a dragging-related event.
		 * @returns {void} 
		 */
		set_userdata(v: object): void;
		/**
		 * This method is used to cancel the default action of a current event.
		 */
		preventDefault(): null;
		/**
		 * This method is used to stop a current event from spreading to the components at higher levels.
		 */
		stopPropagation(): null;
	}
}

