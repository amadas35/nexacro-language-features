// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    ColumnInfo: nexacro.ColumnInfo;
}

    
declare namespace nexacro {
    
	interface ColumnInfo  {
	    /**
		 * @constructor
		 */
		new(): nexacro.ColumnInfo;
	    readonly datapath?: string;
		/**
		 * This read-only property holds the name of a ColumnInfo object.
		 */
		readonly name?: string;
		/**
		 * This property is used to specify the data type of a logical record, a group created by the keystring property.
		 */
		readonly prop?: nexacro.Enum.DatasetColumnProp;
		/**
		 * This property defines the maximum length of data that can be saved to a Dataset column.
		 */
		readonly size?: number;
		/**
		 * This property is used to specify a value displayed in the logical record of the relevant column. This property is applicable when the prop property of the column is set to "TEXT".
		 */
		readonly sumtext?: string;
		/**
		 * This property defines the type of data that is saved to a Dataset Column.
		 */
		readonly type?: nexacro.Enum.DatasetColumnType;
		set_datapath(v: string): void;
		/**
		 * @param {nexacro.Enum.DatasetColumnProp} v This property is used to specify the data type of a logical record, a group created by the keystring property.
		 * @returns {void} 
		 */
		set_prop(v: nexacro.Enum.DatasetColumnProp): void;
		/**
		 * @param {number} v This property defines the maximum length of data that can be saved to a Dataset column.
		 * @returns {void} 
		 */
		set_size(v: number): void;
		/**
		 * @param {string} v This property is used to specify a value displayed in the logical record of the relevant column. This property is applicable when the prop property of the column is set to "TEXT".
		 * @returns {void} 
		 */
		set_sumtext(v: string): void;
		/**
		 * @param {nexacro.Enum.DatasetColumnType} v This property defines the type of data that is saved to a Dataset Column.
		 * @returns {void} 
		 */
		set_type(v: nexacro.Enum.DatasetColumnType): void;
	}
}

