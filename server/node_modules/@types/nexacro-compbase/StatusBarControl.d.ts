// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    StatusBarControl: nexacro.StatusBarControl;
}

    
declare namespace nexacro {
    
	interface StatusBarControl  {
	    /**
		 * @constructor
		 */
		new(): nexacro.StatusBarControl;
	    /**
		 * This property is used to set the background of a StatusBarControl.
		 */
		readonly background?: string;
		/**
		 * This property is used to set the shape of the corners of a StatusBarControl.
		 */
		readonly borderRadius?: string;
		/**
		 * This property is used to set the color of the text displayed in a StatusBarControl.
		 */
		readonly color?: string;
		/**
		 * This property is used to set the type of a mouse pointer that appears when the mouse cursor is located in a StatusBarControl.
		 */
		readonly cursor?: nexacro.Enum.CursorType;
		/**
		 * This property sets a font used for a StatusBarControl.
		 */
		readonly font?: string;
		/**
		 * This property is used to set the spacing between characters (kerning) displayed in a StatusBarControl.
		 */
		readonly letterSpacing?: nexacro.Unit.PixelNegative;
		/**
		 * This property is used to specify the name of a StatusBarControl.
		 */
		readonly name?: string;
		/**
		 * This property is used to set the border of a StatusBarControl.
		 */
		readonly border?: string;
		/**
		 * This property is used to set the image of the edges that are displayed inside the border of an StatusBarControl.
		 */
		readonly edge?: string;
		/**
		 * This property is used to set the padding, an inner margin, of a StatusBarControl.
		 */
		readonly padding?: string;
		/**
		 * This property is used to set the horizontal alignment of the text or contents displayed in a StatusBarControl.
		 */
		readonly textAlign?: nexacro.Enum.HorizontalAlign;
		/**
		 * This property is used to set the vertical alignment of the text or contents displayed in a StatusBarControl.
		 */
		readonly verticalAlign?: nexacro.Enum.VerticalAlign;
		/**
		 * This property is used to set the opacity of a StatusBarControl.
		 */
		readonly opacity?: number;
		/**
		 * This property is used to set the direction in which a progress bar is filled. The bar is displayed on a StatusBarControl.
		 */
		readonly progressbardirection?: nexacro.Enum.ProgressBarDirection;
		/**
		 * This property is used to set the spacing of the right-hand side of a progress bar displayed in a StatusBarControl object.
		 */
		readonly progressbargap?: number;
		/**
		 * This property is used to set the width of a progress bar displayed in a StatusBarControl object.
		 */
		readonly progressbarsize?: number;
		/**
		 * This property is used to determine whether to use a "continuous" style progress bar for the one displayed in a StatusBarControl object.
		 */
		readonly progressbarsmooth?: boolean;
		/**
		 * This property is used to set the spacing between words displayed in a StatusBarControl.
		 */
		readonly wordSpacing?: nexacro.Unit.PixelNegative;
		/**
		 * @param {string} v This property is used to set the background of a StatusBarControl.
		 * @returns {void} 
		 */
		set_background(v: string): void;
		/**
		 * @param {string} v This property is used to set the shape of the corners of a StatusBarControl.
		 * @returns {void} 
		 */
		set_borderRadius(v: string): void;
		/**
		 * @param {string} v This property is used to set the color of the text displayed in a StatusBarControl.
		 * @returns {void} 
		 */
		set_color(v: string): void;
		/**
		 * @param {nexacro.Enum.CursorType} v This property is used to set the type of a mouse pointer that appears when the mouse cursor is located in a StatusBarControl.
		 * @returns {void} 
		 */
		set_cursor(v: nexacro.Enum.CursorType): void;
		/**
		 * @param {string} v This property sets a font used for a StatusBarControl.
		 * @returns {void} 
		 */
		set_font(v: string): void;
		/**
		 * @param {(number|nexacro.Unit.PixelNegative)} v This property is used to set the spacing between characters (kerning) displayed in a StatusBarControl.
		 * @returns {void} 
		 */
		set_letterSpacing(v: number|nexacro.Unit.PixelNegative): void;
		/**
		 * @param {string} v This property is used to specify the name of a StatusBarControl.
		 * @returns {void} 
		 */
		set_name(v: string): void;
		/**
		 * @param {string} v This property is used to set the border of a StatusBarControl.
		 * @returns {void} 
		 */
		set_border(v: string): void;
		/**
		 * @param {string} v This property is used to set the image of the edges that are displayed inside the border of an StatusBarControl.
		 * @returns {void} 
		 */
		set_edge(v: string): void;
		/**
		 * @param {string} v This property is used to set the padding, an inner margin, of a StatusBarControl.
		 * @returns {void} 
		 */
		set_padding(v: string): void;
		/**
		 * @param {nexacro.Enum.HorizontalAlign} v This property is used to set the horizontal alignment of the text or contents displayed in a StatusBarControl.
		 * @returns {void} 
		 */
		set_textAlign(v: nexacro.Enum.HorizontalAlign): void;
		/**
		 * @param {nexacro.Enum.VerticalAlign} v This property is used to set the vertical alignment of the text or contents displayed in a StatusBarControl.
		 * @returns {void} 
		 */
		set_verticalAlign(v: nexacro.Enum.VerticalAlign): void;
		/**
		 * @param {number} v This property is used to set the opacity of a StatusBarControl.
		 * @returns {void} 
		 */
		set_opacity(v: number): void;
		/**
		 * @param {nexacro.Enum.ProgressBarDirection} v This property is used to set the direction in which a progress bar is filled. The bar is displayed on a StatusBarControl.
		 * @returns {void} 
		 */
		set_progressbardirection(v: nexacro.Enum.ProgressBarDirection): void;
		/**
		 * @param {number} v This property is used to set the spacing of the right-hand side of a progress bar displayed in a StatusBarControl object.
		 * @returns {void} 
		 */
		set_progressbargap(v: number): void;
		/**
		 * @param {number} v This property is used to set the width of a progress bar displayed in a StatusBarControl object.
		 * @returns {void} 
		 */
		set_progressbarsize(v: number): void;
		/**
		 * @param {boolean} v This property is used to determine whether to use a "continuous" style progress bar for the one displayed in a StatusBarControl object.
		 * @returns {void} 
		 */
		set_progressbarsmooth(v: boolean): void;
		/**
		 * @param {(number|nexacro.Unit.PixelNegative)} v This property is used to set the spacing between words displayed in a StatusBarControl.
		 * @returns {void} 
		 */
		set_wordSpacing(v: number|nexacro.Unit.PixelNegative): void;
	}
}

