// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    BindItem: nexacro.BindItem;
}

    
declare namespace nexacro {
    
	interface BindItem  {
	    
	    /**
		 * This property is used to set the ID of a Dataset column to bind.
		 */
		readonly columnid?: string;
		/**
		 * This property is used to set the ID of a component to bind.
		 */
		readonly compid?: string;
		/**
		 * This property is used to set the ID of a Dataset to bind.
		 */
		readonly datasetid?: string;
		/**
		 * This property is used to specify the name of a BindItem.
		 */
		readonly name?: string;
		/**
		 * This read-only property holds the parent object of a BindItem.
		 */
		readonly parent?: object;
		/**
		 * This property sets a certain property of a component to bind the property.
		 */
		readonly propid?: string;
		/**
		 * @param {string} v This property is used to set the ID of a Dataset column to bind.
		 * @returns {void} 
		 */
		set_columnid(v: string): void;
		/**
		 * @param {string} v This property is used to set the ID of a component to bind.
		 * @returns {void} 
		 */
		set_compid(v: string): void;
		/**
		 * @param {string} v This property is used to set the ID of a Dataset to bind.
		 * @returns {void} 
		 */
		set_datasetid(v: string): void;
		/**
		 * @param {string} v This property is used to specify the name of a BindItem.
		 * @returns {void} 
		 */
		set_name(v: string): void;
		/**
		 * @param {string} v This property sets a certain property of a component to bind the property.
		 * @returns {void} 
		 */
		set_propid(v: string): void;
		/**
		 * This method is used to execute a BindItem that is dynamically created in a script.
		 */
		bind(): null;
		/**
		 * This method is used to delete a BindItem that is dynamically created through a script.
		 * @returns {boolean} 
		 */
		destroy(): boolean;
		/**
		 * This method is used to initialize a BindItem that is dynamically created in a script.
		 * @param {string} strName This is the name of the BindItem.
		 * @param {string} strCompID This is the ID of the component to bind.
		 * @param {string} strPropertyID This is the ID of the property to bind.
		 * @param {string} strDatasetID This is the ID of the Dataset to bind.
		 * @param {string} strColumnID This is the ID of the Dataset column to bind.
		 */
		init(strName: string, strCompID?: string, strPropertyID?: string, strDatasetID?: string, strColumnID?: string): null;
	}
}

