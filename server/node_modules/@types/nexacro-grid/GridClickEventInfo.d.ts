// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    GridClickEventInfo: nexacro.GridClickEventInfo;
}

    
declare namespace nexacro {
    
	interface GridClickEventInfo extends nexacro.EventInfo {
	    /**
		 * @constructor
		 */
		new(): nexacro.GridClickEventInfo;
	    /**
		 * This property holds a value indicating whether an event occurred with the Alt key pressed.
		 */
		readonly altkey?: any;
		/**
		 * This read-only property holds information on a button or touch that fired an event.
		 */
		readonly button?: any;
		/**
		 * This property holds the x-coordinate of the point where you clicked or touched when an event occurred, calculated based on the area of an entire component.
		 */
		readonly canvasx?: any;
		/**
		 * This property holds the y-coordinate of the point where you clicked or touched when an event occurred, calculated based on the area of an entire component.
		 */
		readonly canvasy?: any;
		/**
		 * This property holds the index of the cell where the event occurred. The index is calculated based on the band of the cell.
		 */
		readonly cell?: number;
		/**
		 * This read-only property holds the detailed information on an event-firing cell.
		 */
		readonly clickitem?: any;
		/**
		 * This property holds the x-coordinate of the point where you clicked or touched when an event occurred, calculated based on the client area of a component.
		 */
		readonly clientx?: any;
		/**
		 * This property holds the y-coordinate of the point where you clicked or touched when an event occurred, calculated based on the client area of a component.
		 */
		readonly clienty?: any;
		/**
		 * This property holds a value indicating the index of a column that contains an event-triggering cell.
		 */
		readonly col?: number;
		/**
		 * This property holds a value indicating whether an event occurred with a Control key pressed.
		 */
		readonly ctrlkey?: any;
		/**
		 * This read-only property holds the ID of an event.
		 */
		readonly eventid?: any;
		/**
		 * This property holds an event-triggering component.
		 */
		readonly fromobject?: object;
		/**
		 * This property holds the component or subcontrol that triggered an event.
		 */
		readonly fromreferenceobject?: object;
		readonly metakey?: any;
		/**
		 * This property holds the index of the cell that was selected last before the event occurrence. The index is calculated based on the band of the cell.
		 */
		readonly oldcell?: number;
		/**
		 * This property holds the index of the column that includes the cell selected last before the event occurrence.
		 */
		readonly oldcol?: number;
		/**
		 * This property holds the index of the row that includes the cell selected last before the event occurrence.
		 */
		readonly oldrow?: number;
		/**
		 * This property holds the index of the sub-row that includes the cell where the event occurred.
		 */
		readonly oldsubrow?: number;
		/**
		 * This property holds the index number of the row that contains the event-firing cell.
		 */
		readonly row?: number;
		/**
		 * This property holds the x-coordinate of the point where the monitor is clicked or touched. The coordinate is calculated based on the monitor area.
		 */
		readonly screenx?: any;
		/**
		 * This property holds the y-coordinate of the point where the monitor is clicked or touched. The coordinate is calculated based on the monitor area.
		 */
		readonly screeny?: any;
		/**
		 * This property holds a value indicating whether an event occurred with the shift key pressed.
		 */
		readonly shiftkey?: any;
		/**
		 * This property holds the index number of the sub-row that contains the event-firing cell.
		 */
		readonly subrow?: number;
		/**
		 * This method is used to cancel the default action of a current event.
		 */
		preventDefault(): null;
	}
}

