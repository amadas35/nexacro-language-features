// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    _GridRowControl: nexacro.GridRowControl;
}

    
declare namespace nexacro {
    type GridRowControlOmitKeys = 'accessibilityaction'|'accessibilitydesclevel'|'accessibilitydescription'|'accessibilityenable'|'accessibilitylabel'|'accessibilityrole'|'background'|'borderRadius'|'bottom'|'boxShadow'|'color'|'cssclass'|'cursor'|'enable'|'enableevent'|'expr'|'font'|'height'|'hotkey'|'id'|'initvalueid'|'left'|'letterSpacing'|'maxheight'|'maxwidth'|'minheight'|'minwidth'|'name'|'border'|'edge'|'padding'|'-nexa-rtl-background-image'|'-nexa-rtl-edge-image'|'textAlign'|'textDecoration'|'verticalAlign'|'wordWrap'|'opacity'|'parent'|'positionstep'|'right'|'rtl'|'taborder'|'tabstop'|'text'|'tooltiptext'|'tooltiptype'|'top'|'visible'|'width'|'wordSpacing'|'addEvent'|'addEventHandler'|'addEventHandlerLookup'|'bringToFront'|'bringToPrev'|'clearEventHandler'|'destroy'|'findEventHandler'|'getDisplayText'|'getEventHandler'|'getFocus'|'getOffsetBottom'|'getOffsetHeight'|'getOffsetLeft'|'getOffsetRight'|'getOffsetTop'|'getOffsetWidth'|'getPixelBottom'|'getPixelHeight'|'getPixelLeft'|'getPixelRight'|'getPixelTop'|'getPixelWidth'|'init'|'insertEventHandler'|'move'|'moveToNext'|'moveToPrev'|'removeEvent'|'removeEventHandler'|'removeEventHandlerLookup'|'resize'|'sendToBack'|'sendToNext'|'setEventHandler'|'setEventHandlerLookup'|'setFocus'|'setOffsetBottom'|'setOffsetHeight'|'setOffsetLeft'|'setOffsetRight'|'setOffsetTop'|'setOffsetWidth'|'show'|'onclick'|'oncontextmenu'|'ondblclick'|'ondrag'|'ondragenter'|'ondragleave'|'ondragmove'|'ondrop'|'oninput'|'onkeydown'|'onkeyup'|'onkillfocus'|'onlbuttondown'|'onlbuttonup'|'onmousedown'|'onmouseenter'|'onmouseleave'|'onmousemove'|'onmouseup'|'onmousewheel'|'onmove'|'onrbuttondown'|'onrbuttonup'|'onsetfocus'|'onsize'|'ontouchend'|'ontouchmove'|'ontouchstart';
	
	interface GridRowControl extends Omit<nexacro.Component, GridRowControlOmitKeys> {
	    /**
		 * @constructor
		 */
		new(): nexacro.GridRowControl;
	    /**
		 * This property determines the band to which a certain row belongs.
		 */
		readonly band?: any;
		/**
		 * This property is used to set the height of a row.
		 */
		readonly size?: any;
		/**
		 * @param {any} v This property is used to set the height of a row.
		 * @returns {void} 
		 */
		set_size(v: any): void;
	}
}

