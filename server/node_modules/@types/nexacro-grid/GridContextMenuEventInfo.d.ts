// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    GridContextMenuEventInfo: nexacro.GridContextMenuEventInfo;
}

    
declare namespace nexacro {
    
	interface GridContextMenuEventInfo extends nexacro.EventInfo {
	    /**
		 * @constructor
		 */
		new(): nexacro.GridContextMenuEventInfo;
	    /**
		 * This property holds a value indicating whether an event occurred with the Alt key pressed.
		 */
		readonly altkey?: any;
		/**
		 * This read-only property holds information on a button or touch that fired an event.
		 */
		readonly button?: any;
		/**
		 * This property holds the x-coordinate of the point where you clicked or touched when an event occurred, calculated based on the area of an entire component.
		 */
		readonly canvasx?: any;
		/**
		 * This property holds the y-coordinate of the point where you clicked or touched when an event occurred, calculated based on the area of an entire component.
		 */
		readonly canvasy?: any;
		/**
		 * This property holds the index of an event-firing cell. The index is calculated based on the band of the cell.
		 */
		readonly cell?: number;
		/**
		 * This property holds the x-coordinate of the point where you clicked or touched when an event occurred, calculated based on the client area of a component.
		 */
		readonly clientx?: any;
		/**
		 * This property holds the y-coordinate of the point where you clicked or touched when an event occurred, calculated based on the client area of a component.
		 */
		readonly clienty?: any;
		/**
		 * This property holds a value indicating the index of a column that contains an event-triggering cell.
		 */
		readonly col?: number;
		/**
		 * This property holds a value indicating whether an event occurred with a Control key pressed.
		 */
		readonly ctrlkey?: any;
		/**
		 * This read-only property holds the ID of an event.
		 */
		readonly eventid?: any;
		/**
		 * This property holds an event-triggering component.
		 */
		readonly fromobject?: object;
		/**
		 * This property holds the component or subcontrol that triggered an event.
		 */
		readonly fromreferenceobject?: object;
		/**
		 * This property holds the index of the sub-cell where the event occurred. The index is calculated based on the merged cell.
		 */
		readonly mergecell?: any;
		/**
		 * This property holds the index of the column where there is a sub-cell that fired the event.
		 */
		readonly mergecol?: any;
		/**
		 * This property holds the index of the row where there is a sub-cell that fired the event.
		 */
		readonly mergerow?: any;
		/**
		 * The attribute with state on whether the command (or windows) key was entered at the occurrence of an event.
		 */
		readonly metakey?: any;
		/**
		 * This property holds a value indicating the index of a row that contains an event-triggering cell.
		 */
		readonly row?: any;
		/**
		 * This property holds the x-coordinate of the point where the monitor is clicked or touched. The coordinate is calculated based on the monitor area.
		 */
		readonly screenx?: any;
		/**
		 * This property holds the y-coordinate of the point where the monitor is clicked or touched. The coordinate is calculated based on the monitor area.
		 */
		readonly screeny?: any;
		/**
		 * This property holds a value indicating whether an event occurred with the shift key pressed.
		 */
		readonly shiftkey?: any;
		/**
		 * This property holds the index of a subrow where there is the event-triggering cell.
		 */
		readonly subrow?: any;
		/**
		 * This method is used to cancel the default action of a current event.
		 */
		preventDefault(): null;
	}
}

