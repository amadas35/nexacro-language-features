// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    ExternalAPI: nexacro.ExternalAPI;
}

    
declare namespace nexacro {
    type ExternalAPIOmitKeys = 'id';
	
	interface ExternalAPI extends Omit<nexacro.EventSinkObject, ExternalAPIOmitKeys> {
	    /**
		 * @constructor
		 */
		new(): nexacro.ExternalAPI;
	    /**
		 * This property is used to specify the name of a ExternalAPI.
		 */
		readonly name?: string;
		/**
		 * This read-only property holds the parent object of a ExternalAPI.
		 */
		readonly parent?: object;
		/**
		 * This event occurs when a task requested by an ExternalAPI object fails.
		 */
		readonly onerror?: nexacro.EventObject<nexacro.ExternalAPI, nexacro.ExternalAPIErrorEventInfo>;
		/**
		 * This event occurs when data (a string) is received from an external app.
		 */
		readonly onrecvdata?: nexacro.EventObject<nexacro.ExternalAPI, nexacro.ExternalAPIEventInfo>;
		/**
		 * This event occurs when a task requested by an ExternalAPI object succeeds.
		 */
		readonly onsuccess?: nexacro.EventObject<nexacro.ExternalAPI, nexacro.ExternalAPIEventInfo>;
		/**
		 * @param {string} v This property is used to specify the name of a ExternalAPI.
		 * @returns {void} 
		 */
		set_name(v: string): void;
		/**
		 * This method is used to execute an API module defined in a certain external app.
		 * @param {string} strRecvID This is a string that represent the ID of a method you want to execute.

This argument will be delivered to the recvid property of the ExternalAPIEventIfo object, which is linked to the onsuccess and onrecvdata events.
		 * @param {string} strAppID This is a string representing the ID of the external app where the target API module is defined.
		 * @param {string} strAPI This is a string that represent the name of an API module you want to execute.
		 * @param {string} strParams This is a string representing the parameters of the API module to execute.

If there are multiple parameters, they are divided by whitespaces.
If a parameter contains a whitespace, you must surround it by single quotation marks (').
		 * @returns {boolean} 
		 */
		execExtAPI(strRecvID: string, strAppID: string, strAPI: string, strParams?: string): boolean;
		/**
		 * This method is used to check whether the access to a certain external app is permitted.
		 * @param {string} strAppID This is a string representing the ID of an external app to which you will check whether the access is permitted.

In Android, an argument takes the form of a domain. ("com.tobesoft.nexacroplatform.testmodule")
In iOS, an argument takes the form of a URL scheme. ("TobesoftTestApp://")
		 * @returns {boolean} 
		 */
		isAccessible(strAppID: string): boolean;
	}
}

