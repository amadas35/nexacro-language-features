// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    Camera: nexacro.Camera;
}

    
declare namespace nexacro {
    type CameraOmitKeys = 'id'|'addEventHandler'|'addEventHandlerLookup'|'clearEventHandler'|'findEventHandler'|'getEventHandler'|'removeEventHandler'|'removeEventHandlerLookup'|'setEventHandler'|'setEventHandlerLookup';
	
	interface Camera extends Omit<nexacro.EventSinkObject, CameraOmitKeys> {
	    /**
		 * @constructor
		 */
		new(): nexacro.Camera;
	    /**
		 * This property sets the type of an image obtained through a camera app of a mobile device.
		 */
		readonly encodingtype?: nexacro.Enum.EncodingType;
		/**
		 * This property determines how to deliver a photo taken in a mobile device.
		 */
		readonly gettype?: nexacro.Enum.GetType;
		/**
		 * This property is used to set the height of an image that is obtained from a mobile device through a camera app.
		 */
		readonly imageheight?: number;
		/**
		 * This property sets the quality of an image obtained through a camera app of a mobile device.
		 */
		readonly imagequality?: number;
		/**
		 * This property is used to set the width of an image that is obtained from a mobile device through a camera app.
		 */
		readonly imagewidth?: number;
		/**
		 * This property is used to specify the name of a Camera.
		 */
		readonly name?: string;
		/**
		 * This read-only property holds the parent object of a Camera.
		 */
		readonly parent?: object;
		/**
		 * This property is used to determine whether to save a photo taken with a mobile device into the Gallery field.
		 */
		readonly usegallery?: boolean;
		/**
		 * This event occurs when an image is successfully obtained through the camera app of a mobile device.
		 */
		readonly oncapture?: nexacro.EventObject<nexacro.Camera, nexacro.CameraEventInfo>;
		/**
		 * This event occurs when the linkage with a camera app of a mobile device fails.
		 */
		readonly onerror?: nexacro.EventObject<nexacro.Camera, nexacro.CameraErrorEventInfo>;
		/**
		 * @param {nexacro.Enum.EncodingType} v This property sets the type of an image obtained through a camera app of a mobile device.
		 * @returns {void} 
		 */
		set_encodingtype(v: nexacro.Enum.EncodingType): void;
		/**
		 * @param {nexacro.Enum.GetType} v This property determines how to deliver a photo taken in a mobile device.
		 * @returns {void} 
		 */
		set_gettype(v: nexacro.Enum.GetType): void;
		/**
		 * @param {number} v This property is used to set the height of an image that is obtained from a mobile device through a camera app.
		 * @returns {void} 
		 */
		set_imageheight(v: number): void;
		/**
		 * @param {number} v This property sets the quality of an image obtained through a camera app of a mobile device.
		 * @returns {void} 
		 */
		set_imagequality(v: number): void;
		/**
		 * @param {number} v This property is used to set the width of an image that is obtained from a mobile device through a camera app.
		 * @returns {void} 
		 */
		set_imagewidth(v: number): void;
		/**
		 * @param {string} v This property is used to specify the name of a Camera.
		 * @returns {void} 
		 */
		set_name(v: string): void;
		/**
		 * @param {boolean} v This property is used to determine whether to save a photo taken with a mobile device into the Gallery field.
		 * @returns {void} 
		 */
		set_usegallery(v: boolean): void;
		/**
		 * This method is used to obtain an image by operating the camera app of a mobile device.
		 */
		takePicture(): null;
	}
}

