// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    Vibrator: nexacro.Vibrator;
}

    
declare namespace nexacro {
    type VibratorOmitKeys = 'id'|'addEventHandler'|'clearEventHandler'|'findEventHandler'|'getEventHandler'|'removeEventHandler'|'setEventHandler'|'setEventHandlerLookup';
	
	interface Vibrator extends Omit<nexacro.EventSinkObject, VibratorOmitKeys> {
	    /**
		 * @constructor
		 */
		new(): nexacro.Vibrator;
	    /**
		 * This property is used to specify the name of a Vibrator.
		 */
		readonly name?: string;
		/**
		 * This read-only property holds the parent object of a Vibrator.
		 */
		readonly parent?: object;
		/**
		 * This property is used to set the pattern of vibration conducted in a mobile device. The pattern is specified in the form of an array.
		 */
		readonly patterns?: object;
		/**
		 * This property is used to specify the number of repeating a vibration pattern in a mobile device.
		 */
		readonly repeatcount?: number;
		/**
		 * This property is used to set the starting point in the vibration pattern defined by the patterns property.
		 */
		readonly startpos?: any;
		/**
		 * This event occurs when vibration fails to be performed in a mobile device.
		 */
		readonly onerror?: nexacro.EventObject<nexacro.Vibrator, nexacro.VibratorErrorEventInfo>;
		/**
		 * This event occurs after a vibration operation is completed in a mobile device.
		 */
		readonly onplay?: nexacro.EventObject<nexacro.Vibrator, nexacro.VibratorEventInfo>;
		/**
		 * This event occurs after a vibration operation is cancelled in a mobile device.
		 */
		readonly onstop?: nexacro.EventObject<nexacro.Vibrator, nexacro.VibratorEventInfo>;
		/**
		 * @param {string} v This property is used to specify the name of a Vibrator.
		 * @returns {void} 
		 */
		set_name(v: string): void;
		/**
		 * @param {object} v This property is used to set the pattern of vibration conducted in a mobile device. The pattern is specified in the form of an array.
		 * @returns {void} 
		 */
		set_patterns(v: object): void;
		/**
		 * @param {number} v This property is used to specify the number of repeating a vibration pattern in a mobile device.
		 * @returns {void} 
		 */
		set_repeatcount(v: number): void;
		/**
		 * @param {any} v This property is used to set the starting point in the vibration pattern defined by the patterns property.
		 * @returns {void} 
		 */
		set_startpos(v: any): void;
		/**
		 * This method is used to check whether the vibration functionality of a mobile device can be used.
		 * @returns {boolean} 
		 */
		hasVibrator(): boolean;
		/**
		 * This method is used to generate vibration in a mobile device.
		 */
		play(): null;
		/**
		 * This method is used for a mobile device to stop vibration.
		 */
		stop(): null;
	}
}

