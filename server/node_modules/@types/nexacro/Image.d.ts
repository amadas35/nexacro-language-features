// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 4.3;
    
interface NexacroAPI {
    Image: nexacro.Image;
}

    
declare namespace nexacro {
    
	interface Image extends nexacro.EventSinkObject {
	    /**
		 * @constructor
		 */
		new(): nexacro.Image;
	    /**
		 * This read-only property holds the height of an image loaded onto the src property of an Image object.
		 */
		readonly height?: any;
		/**
		 * This property is used to specify the location of an image file to load onto an Image object.
		 */
		readonly src?: any;
		/**
		 * This read-only property holds the width of an image loaded onto the src property of an Image object.
		 */
		readonly width?: any;
		/**
		 * This event occurs for the failure to load the image specified by the src property.
		 */
		readonly onerror?: nexacro.EventObject<nexacro.Image, nexacro.ErrorEventInfo>;
		/**
		 * This event occurs when an Image object successfully loads the image specified by the src property.
		 */
		readonly onload?: nexacro.EventObject<nexacro.Image, nexacro.LoadEventInfo>;
		/**
		 * @param {any} v This property is used to specify the location of an image file to load onto an Image object.
		 * @returns {void} 
		 */
		set_src(v: any): void;
		/**
		 * This method is used to return Base64-encoded data stored in an Image object.
		 * @returns {string} 
		 */
		getBase64String(): string;
		/**
		 * This method is used to save Base64-encoded data into an Image object.
		 * @param {string} strBase64 It specifies Base64-encoded data to save into an Image object.
		 */
		setBase64String(strBase64: string): null;
	}
}

