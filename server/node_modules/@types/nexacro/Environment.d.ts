// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 4.3;
    
interface NexacroAPI {
    Environment: nexacro.Environment;
}

    
declare namespace nexacro {
    type EnvironmentOmitKeys = 'new';
	
	interface Environment extends Omit<nexacro.EventSinkObject, EnvironmentOmitKeys> {
	    
	    /**
		 * This property is used to specify a hotkey for searching the history of accessibility features backward.
		 */
		readonly accessibilitybackwardkey?: nexacro.Enum.HotKeyKey;
		/**
		 * This property is used to determine what type of accessibility applies to a component.
		 */
		readonly accessibilitydescreadtype?: nexacro.Enum.AccessibilityDescReadType;
		/**
		 * This property is used to specify a string that accessibility features apply to. This property is applied when accessibility is activated and then the focus moves to the first component of the Form.
		 */
		readonly accessibilityfirstovermessage?: string;
		/**
		 * This property is used to specify a hotkey for searching the history of accessibility features forward.
		 */
		readonly accessibilityforwardkey?: nexacro.Enum.HotKeyKey;
		/**
		 * This property is used to specify a hotkey for moving to the next component according to the tab order among the components whose accessibilityrole properties are set to "heading".
		 */
		readonly accessibilityheadingnexthotkey?: nexacro.Enum.HotKeyKey;
		/**
		 * This property is used to specify a hotkey for moving to the previous component according to the tab order among the components whose accessibilityrole properties are set to "heading".
		 */
		readonly accessibilityheadingprevhotkey?: nexacro.Enum.HotKeyKey;
		/**
		 * This property is used to specify the number of accessibility features that can be saved in the history.
		 */
		readonly accessibilityhistorycount?: number;
		/**
		 * This property is used to specify a string that accessibility features apply to. This property is applied when accessibility is activated and then the focus moves to the last component of the Form.
		 */
		readonly accessibilitylastovermessage?: string;
		/**
		 * This property is used to specify a hotkey for replaying the immediate previous accessibility feature.
		 */
		readonly accessibilityreplayhotkey?: nexacro.Enum.HotKeyKey;
		/**
		 * This property is used to select the interfaces of a screen reader, an application for achieving accessibility.
		 */
		readonly accessibilitytype?: nexacro.Enum.AccessibilityType;
		/**
		 * This property is used to set a hotkey for conducting the accessibility features of a whole Form that holds focus.
		 */
		readonly accessibilitywholereadhotkey?: nexacro.Enum.HotKeyKey;
		/**
		 * This property is used to determine whether to conduct the accessibility features of a whole Form when it is loaded.
		 */
		readonly accessibilitywholereadtype?: nexacro.Enum.AccessibilityWholeReadType;
		/**
		 * This property is used to determine whether to automatically add a cookie as a global variable when you receive the cookie from the server.
		 */
		readonly addcookietovariable?: boolean;
		/**
		 * This property determines whether to include the version information in a query string in the process of generating a project. If the version information is included, you can update a cache manually.
		 */
		readonly checkversion?: boolean;
		/**
		 * This property determines how to load data onto a Dataset when you receive an error code.
		 */
		readonly datasetloadtype?: nexacro.Enum.DataSetLoadType;
		/**
		 * This property determines how to process Infinity in a Dataset column whose type is INT, FLOAT or BIGDECIMAL.
		 */
		readonly datasetsaveinfinity?: nexacro.Enum.DataSetValidation;
		/**
		 * This property determines how to process an invalid date in a Dataset column whose type is DATE, TIME or DATETIME.
		 */
		readonly datasetsaveinvaliddate?: nexacro.Enum.DataSetValidation;
		/**
		 * This property determines how to process NaN in a Dataset column whose type is DATE, TIME or DATETIME.
		 */
		readonly datasetsavenan?: nexacro.Enum.DataSetValidation;
		/**
		 * This property determines the rules that govern how to process values invalid for a Dataset.
		 */
		readonly datatyperule?: nexacro.Enum.Env_DatasetRule;
		/**
		 * This property determines whether to use DNS queries in an application for transactions.
		 */
		readonly dnsquery?: nexacro.Enum.Env_DnsQuery;
		/**
		 * This property is used to determine whether to activate the accessibility features of an application.
		 */
		readonly enableaccessibility?: boolean;
		/**
		 * This read-only property is used to determine whether to use caches in the communications with a server.
		 */
		readonly enablecache?: boolean;
		/**
		 * This read-only property is used to determine whether to use a system clipboard.
		 */
		readonly enableclipboard?: boolean;
		/**
		 * This property is used to determine whether to use cookies in the transactions with a server.
		 */
		readonly enablecookie?: boolean;
		readonly enableinspector?: boolean;
		/**
		 * This property is used to determine whether to use the screen capture feature that is provided by the OS.
		 */
		readonly enablescreencapture?: boolean;
		/**
		 * This property is used to determine whether to trigger touch-related events.
		 */
		readonly enabletouchevent?: boolean;
		/**
		 * This property is used to set the access rights for local files when a VirtualFile object is used.
		 */
		readonly filesecurelevel?: nexacro.Enum.SecureLevel;
		/**
		 * This read-only property is used to set a theme for an application when the OS is in the high contrast mode.
		 */
		readonly highcontrastthemeid?: string;
		/**
		 * This property is used to set the number of retries in case of the HTTP/HTTPS communications error.
		 */
		readonly httpretry?: number;
		/**
		 * This property is used to set a period of time allowed for receiving the server's response during the HTTP/HTTPS communications.
		 */
		readonly httptimeout?: number;
		/**
		 * This property is used to specify an image in the resources field. The image is used as an icon displayed in the taskbar or as a favicon.
		 */
		readonly icon?: string;
		/**
		 * This property is used to specify the name of a file that is defined in InitValueDefinition. The file is defined to apply the relevant initial values.
		 */
		readonly initvaluefileid?: string;
		/**
		 * This read-only property holds a key value that was set during the execution of an application.
		 */
		readonly key?: any;
		/**
		 * This property is used to set an image that suggests that an application is in the process of loading data.
		 */
		readonly loadingimage?: string;
		/**
		 * This property is used to set a locale.
		 */
		readonly locale?: nexacro.Enum.LocaleCode;
		/**
		 * This property is used to specify the error level, which is a criterion for determining which errors are printed in a log file when those errors occur in the application.
		 */
		readonly loglevel?: nexacro.Enum.LogLevel;
		/**
		 * This property is used to set the security level, which is a criterion for permitting access to a remote server during the socket communications using TCP or HTTP/HTTPS.
		 */
		readonly networksecurelevel?: nexacro.Enum.SecureLevel;
		/**
		 * This property is used to determine the flow direction of internal contents or components.
		 */
		readonly rtl?: boolean;
		/**
		 * This property is used to size the scrollbars displayed in components of an application.
		 */
		readonly scrollbarsize?: number;
		/**
		 * This property determines how scrollbars work in a component in an application.
		 */
		readonly scrollbartype?: nexacro.Enum.ScrollBarType | `${nexacro.Enum.ScrollBarType} ${nexacro.Enum.ScrollBarType}`;
		/**
		 * This property is used to set the size of the scroll indicator bars displayed in the components in a certain application.
		 */
		readonly scrollindicatorsize?: number;
		/**
		 * This read-only property holds the data on the services of TypeDefinition.
		 */
		readonly services?: any;
		/**
		 * This property is used to set a record separator used in communicating data in the SSV format.
		 */
		readonly ssvrecordseparator?: string;
		/**
		 * This property is used to set a column separator used in communicating data in the SSV format.
		 */
		readonly ssvunitseparator?: string;
		/**
		 * This property is used to determine whether focus, which is moved by the Tab key or Shift + Tab key, circulates within a form.
		 */
		readonly tabkeycirculation?: nexacro.Enum.Tabkeycirculation;
		/**
		 * This property is used to set a theme to apply to an application.
		 */
		readonly themeid?: string;
		readonly traceduration?: any;
		/**
		 * This property is used to determine how to print messages in the log file of an application.
		 */
		readonly tracemode?: nexacro.Enum.TraceMode;
		/**
		 * This property is used to set the context menu that appears when right-clicking the area of an application.
		 */
		readonly usecontextmenu?: nexacro.Enum.UseContextMenuValueType;
		/**
		 * This property is used to determine whether to use the keepalive feature that is designed to maintain the connection with a server in the HTTP/HTTPS communications.
		 */
		readonly usehttpkeepalive?: boolean;
		/**
		 * This property is used to determine whether to use the keepalive feature that is designed to maintain the connection with a server in the proxy communications.
		 */
		readonly useproxykeepalive?: boolean;
		/**
		 * This property is used to set the IDs of the user fonts applied to an application.
		 */
		readonly userfontid?: string;
		/**
		 * This property is used to determine whether to display a wait cursor while waiting for data transfer during the communications with a server.
		 */
		readonly usewaitcursor?: boolean;
		/**
		 * This property is used to set the version of the Environment object.
		 */
		readonly version?: string;
		/**
		 * This is the first event that occurs in response to a key input when accessibility is activated.
		 */
		readonly onaccessibilitykey?: nexacro.EventObject<nexacro.Environment, nexacro.KeyEventInfo>;
		readonly ondevicepermission?: nexacro.EventObject<nexacro.Environment, nexacro.DevicePermissionEventInfo>;
		/**
		 * This event occurs when a non-transaction error occurs or the onerror event bubbles from a lower level.
		 */
		readonly onerror?: nexacro.EventObject<nexacro.Environment, nexacro.ErrorEventInfo>;
		/**
		 * This event occurs when another event is delivered to a device defined in the DeviceAdaptors field.
		 */
		readonly onextendedcommand?: nexacro.EventObject<nexacro.Environment, nexacro.ExtendedCommandEventInfo>;
		/**
		 * This event occurs upon the loading of the Nexacro engine.
		 */
		readonly onload?: nexacro.EventObject<nexacro.Environment, nexacro.LoadEventInfo>;
		/**
		 * @param {nexacro.Enum.HotKeyKey} v This property is used to specify a hotkey for searching the history of accessibility features backward.
		 * @returns {void} 
		 */
		set_accessibilitybackwardkey(v: nexacro.Enum.HotKeyKey): void;
		/**
		 * @param {nexacro.Enum.AccessibilityDescReadType} v This property is used to determine what type of accessibility applies to a component.
		 * @returns {void} 
		 */
		set_accessibilitydescreadtype(v: nexacro.Enum.AccessibilityDescReadType): void;
		/**
		 * @param {string} v This property is used to specify a string that accessibility features apply to. This property is applied when accessibility is activated and then the focus moves to the first component of the Form.
		 * @returns {void} 
		 */
		set_accessibilityfirstovermessage(v: string): void;
		/**
		 * @param {nexacro.Enum.HotKeyKey} v This property is used to specify a hotkey for searching the history of accessibility features forward.
		 * @returns {void} 
		 */
		set_accessibilityforwardkey(v: nexacro.Enum.HotKeyKey): void;
		/**
		 * @param {nexacro.Enum.HotKeyKey} v This property is used to specify a hotkey for moving to the next component according to the tab order among the components whose accessibilityrole properties are set to "heading".
		 * @returns {void} 
		 */
		set_accessibilityheadingnexthotkey(v: nexacro.Enum.HotKeyKey): void;
		/**
		 * @param {nexacro.Enum.HotKeyKey} v This property is used to specify a hotkey for moving to the previous component according to the tab order among the components whose accessibilityrole properties are set to "heading".
		 * @returns {void} 
		 */
		set_accessibilityheadingprevhotkey(v: nexacro.Enum.HotKeyKey): void;
		/**
		 * @param {number} v This property is used to specify the number of accessibility features that can be saved in the history.
		 * @returns {void} 
		 */
		set_accessibilityhistorycount(v: number): void;
		/**
		 * @param {string} v This property is used to specify a string that accessibility features apply to. This property is applied when accessibility is activated and then the focus moves to the last component of the Form.
		 * @returns {void} 
		 */
		set_accessibilitylastovermessage(v: string): void;
		/**
		 * @param {nexacro.Enum.HotKeyKey} v This property is used to specify a hotkey for replaying the immediate previous accessibility feature.
		 * @returns {void} 
		 */
		set_accessibilityreplayhotkey(v: nexacro.Enum.HotKeyKey): void;
		/**
		 * @param {nexacro.Enum.AccessibilityType} v This property is used to select the interfaces of a screen reader, an application for achieving accessibility.
		 * @returns {void} 
		 */
		set_accessibilitytype(v: nexacro.Enum.AccessibilityType): void;
		/**
		 * @param {nexacro.Enum.HotKeyKey} v This property is used to set a hotkey for conducting the accessibility features of a whole Form that holds focus.
		 * @returns {void} 
		 */
		set_accessibilitywholereadhotkey(v: nexacro.Enum.HotKeyKey): void;
		/**
		 * @param {nexacro.Enum.AccessibilityWholeReadType} v This property is used to determine whether to conduct the accessibility features of a whole Form when it is loaded.
		 * @returns {void} 
		 */
		set_accessibilitywholereadtype(v: nexacro.Enum.AccessibilityWholeReadType): void;
		/**
		 * @param {nexacro.Enum.DataSetLoadType} v This property determines how to load data onto a Dataset when you receive an error code.
		 * @returns {void} 
		 */
		set_datasetloadtype(v: nexacro.Enum.DataSetLoadType): void;
		/**
		 * @param {nexacro.Enum.DataSetValidation} v This property determines how to process Infinity in a Dataset column whose type is INT, FLOAT or BIGDECIMAL.
		 * @returns {void} 
		 */
		set_datasetsaveinfinity(v: nexacro.Enum.DataSetValidation): void;
		/**
		 * @param {nexacro.Enum.DataSetValidation} v This property determines how to process an invalid date in a Dataset column whose type is DATE, TIME or DATETIME.
		 * @returns {void} 
		 */
		set_datasetsaveinvaliddate(v: nexacro.Enum.DataSetValidation): void;
		/**
		 * @param {nexacro.Enum.DataSetValidation} v This property determines how to process NaN in a Dataset column whose type is DATE, TIME or DATETIME.
		 * @returns {void} 
		 */
		set_datasetsavenan(v: nexacro.Enum.DataSetValidation): void;
		set_enableinspector(v: boolean): void;
		/**
		 * @param {number} v This property is used to set a period of time allowed for receiving the server's response during the HTTP/HTTPS communications.
		 * @returns {void} 
		 */
		set_httptimeout(v: number): void;
		/**
		 * @param {nexacro.Enum.LocaleCode} v This property is used to set a locale.
		 * @returns {void} 
		 */
		set_locale(v: nexacro.Enum.LocaleCode): void;
		/**
		 * @param {nexacro.Enum.LogLevel} v This property is used to specify the error level, which is a criterion for determining which errors are printed in a log file when those errors occur in the application.
		 * @returns {void} 
		 */
		set_loglevel(v: nexacro.Enum.LogLevel): void;
		set_traceduration(v: any): void;
		/**
		 * @param {boolean} v This property is used to determine whether to display a wait cursor while waiting for data transfer during the communications with a server.
		 * @returns {void} 
		 */
		set_usewaitcursor(v: boolean): void;
		/**
		 * @param {string} v This property is used to set the version of the Environment object.
		 * @returns {void} 
		 */
		set_version(v: string): void;
		/**
		 * This method is used to obtain an object that contains the text delivered as a parameter. The object is among the ones specified as the values of accessibility-related properties. You need to specify the scope in which you search for the sought text.
		 * @param {object} objParent It specifies an object that represents the base in which you search for the sought text.

You can specify only a MainFrame, ChildFrame, Form or container component.
The search scope only covers a designated object.
		 * @param {object} objStartComp It specifies an object from which the search process starts. The object is one of the children of the object that is specified as the value of the objParent parent.

If you specify an invalid value or "null", the search will begin from the first object in objParent.
		 * @param {string} strFindText It specifies the text that you want to find.

The value is case insensitive. Moreover, a result will be found even if the search string matches only part of a property value.
		 * @param {string} strProp It designates the accessibility-related properties that you want to search.

For "all", Nexacro Platform attempts to find the text specified as strFindText from the accessibilitylabel and accessibilitydescription properties.
For "label", Nexacro Platform attempts to find the text specified as strFindText from the accessibilitylabel property.
For "desc", Nexacro Platform attempts to find the text specified as strFindText from the accessibilitydescription property.

The default value is "all".
		 * @param {string} strDirection It specifies the direction of searching.

For "next", search will start from the object specified as objStartComp and proceed in the direction of tab order.
For "prev", search will start from the object specified as objStartComp and proceed in the opposite direction of tab order.

The default value is "next".
		 * @param {string} strScope It specifies search scope.

For "all",  Nexacro Platform will search all the objects under the object specified as objParent.
For "child", Nexacro Platform will search only the objects registered as the children of the object specified as objParent.

The default value is "all".
		 * @returns {object} 
		 */
		findAccessibility(objParent: object, objStartComp: object, strFindText: string, strProp?: string, strDirection?: string, strScope?: string): object;
		/**
		 * This method returns a certain device defined in the DeviceAdaptors field.
		 * @param {string} strID This is a string representing the ID of a device to obtain.
		 * @returns {object} 
		 */
		getDeviceAdaptor(strID: string): object;
		/**
		 * This method is used to conduct the accessibility feature of the object delivered as a parameter.
		 * @param {object} objComp Object whose accessibility feature will be conducted
		 * @returns {boolean} 
		 */
		playAccessibility(objComp: object): boolean;
		setDesktopScreenWidth(): null;
		/**
		 * This method delivers information to the parent application when Nexacro Platform is included by another application.
		 * @param {number} nNotifyID This is a number representing the ID of the notification.
		 * @param {string} strMessage This is a string representing the information that will be delivered to the parent application.
		 */
		userNotify(nNotifyID: number, strMessage: string): null;
	}
}

