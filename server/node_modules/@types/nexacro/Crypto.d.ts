// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 4.3;
    
interface NexacroAPI {
    Crypto: nexacro.Crypto;
}

    
declare namespace nexacro {
    
	interface Crypto  {
	    /**
		 * @constructor
		 */
		new(): nexacro.Crypto;
	    /**
		 * This property is used to specify the name of a Crypto.
		 */
		readonly name?: string;
		/**
		 * It is Property to indicate algorithm to encode.
		 */
		readonly type?: any;
		/**
		 * @param {string} v This property is used to specify the name of a Crypto.
		 * @returns {void} 
		 */
		set_name(v: string): void;
		/**
		 * It is Method to decode encoded Buffer.
		 * @param {object} objBuffer It is Buffer Object to decode.
		 * @param {object} objKey It is Key Object to create through getKey Method.
		 * @returns {object} 
		 */
		decrypt(objBuffer: object, objKey: object): object;
		/**
		 * It is Method to encode Buffer.
		 * @param {object} objBuffer It is Buffer Object to encode.
		 * @param {object} objKey It is Key Object to create through getKey Method.
		 * @returns {object} 
		 */
		encrypt(objBuffer: object, objKey: object): object;
		/**
		 * It is Method generate encoding key.
		 * @param {string} strUserKey It is a user key value.
		 * @returns {object} 
		 */
		getKey(strUserKey: string): object;
		/**
		 * It is Method to initialize encoding methods.
		 * @param {string} strType Encoding algorithm 

"seed" : SEED algorithm
		 * @param {number} nBit It is Encoding level and its unit is bit and only number should be input without bit.

ex) 128 , 256 , 1024
		 */
		init(strType: string, nBit: number): null;
	}
}

