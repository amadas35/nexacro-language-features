// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 4.3;
    
interface NexacroAPI {
    Tray: nexacro.Tray;
}

    
declare namespace nexacro {
    
	interface Tray extends nexacro.EventSinkObject {
	    /**
		 * @constructor
		 */
		new(): nexacro.Tray;
	    /**
		 * This property is used to set an icon image on the tray.
		 */
		readonly icon?: string;
		/**
		 * This read-only property holds the TrayPopupMenu objects registered in a Tray.
		 */
		readonly items?: any;
		/**
		 * This property is used to specify the name of a Tray.
		 */
		readonly name?: any;
		/**
		 * This property is used to specify the text of a tooltip that apeears when a mouse pointer hovers over a tray icon.
		 */
		readonly tooltip?: any;
		readonly onballoontipclick?: nexacro.EventObject<nexacro.Tray, nexacro.ClickEventInfo>;
		readonly onballoontiphide?: nexacro.EventObject<nexacro.Tray, nexacro.TrayBalloonTipHideEventInfo>;
		readonly onballoontipshow?: nexacro.EventObject<nexacro.Tray, nexacro.EventInfo>;
		/**
		 * This is an event that occurs when double-clicking a tray icon.
		 */
		readonly ondblclick?: nexacro.EventObject<nexacro.Tray, nexacro.MouseEventInfo>;
		/**
		 * This event occurs when you click the left button of a mouse within a Tray icon.
		 */
		readonly onlbuttonup?: nexacro.EventObject<nexacro.Tray, nexacro.MouseEventInfo>;
		/**
		 * This event occurs when you click the right button of a mouse within a Tray icon.
		 */
		readonly onrbuttonup?: nexacro.EventObject<nexacro.Tray, nexacro.MouseEventInfo>;
		/**
		 * @param {string} v This property is used to set an icon image on the tray.
		 * @returns {void} 
		 */
		set_icon(v: string): void;
		/**
		 * @param {any} v This property is used to specify the name of a Tray.
		 * @returns {void} 
		 */
		set_name(v: any): void;
		/**
		 * @param {any} v This property is used to specify the text of a tooltip that apeears when a mouse pointer hovers over a tray icon.
		 * @returns {void} 
		 */
		set_tooltip(v: any): void;
		/**
		 * This method is used to add a TrayPopupMenu object to the items property of a Tray.
		 * @param {string} strID This is the ID of a TrayPopupMenu object to add to the items property of the Tray.
		 * @param {object} objPopupMenu This is a TrayPopupMenu object to add to the items property of the Tray.
		 * @returns {number} 
		 */
		addItem(strID: string, objPopupMenu: object): number;
		/**
		 * This method is used to delete a TrayPopupMenu object registered in the items property of a Tray.
		 * @param {string} strID This is the ID of a TrayPopupMenu object to delete from the items property of the Tray.
		 * @returns {number} 
		 */
		deleteItem(strID: string): number;
		/**
		 * This method is used to delete a tray that is dynamically created through a script.
		 * @returns {boolean} 
		 */
		destroy(): boolean;
		/**
		 * This method returns the index number of a certain TrayPopupMenu object registered in the items property of a Tray.
		 * @param {string} strID This is the ID of a TrayPopupMenu object registered in the items property.
		 * @returns {number} 
		 */
		findItem(strID: string): number;
		/**
		 * This method returns the number of TrayPopupMenu objects registered in the items property of a Tray.
		 * @returns {number} 
		 */
		getItemCount(): number;
		hideBalloonTip(): null;
		/**
		 * This method is used to initialize a Tray after creating it in a script dynamically.
		 * @param {string} strID It sets the ID of a dynamically-created Tray.
		 * @param {string} icon It sets an icon that will be used in the Tray.
		 * @param {string} tooltip It sets the text that will be displayed as a tooltip in the Tray.
		 */
		init(strID: string, icon: string, tooltip: string): null;
		/**
		 * This method is used to insert a TrayPopupMenu object to a certain place of the items property of a Tray.
		 * @param {number} nIndex This is the index number of the place where a TrayPopupMenu object will be inserted.
		 * @param {string} strID This is the ID of a TrayPopupMenu object to insert.
		 * @param {object} objPopupMenu This is a TrayPopupMenu object to insert.
		 * @returns {number} 
		 */
		insertItem(nIndex: number, strID: string, objPopupMenu: object): number;
		/**
		 * This method is used to display a tray on the taskbar. The tray mentioned here refers to the one that is dynamically created through a script.
		 */
		show(): null;
		/**
		 * This method is used to show a balloon tip on a Tray.
		 * @param {string} strTitleIcon It is the name and path of an icon to appear on the left side of the balloon tip title.

The types of applicable system icons are "information", "warning", "error" and "none".
		 * @param {string} strTitle This is the title to appear in the balloon tip.
		 * @param {string} strText This is the text displayed in the balloon tip.
		 * @param {boolean} bNoSound If this parameter is set to "true", a sound will not be made when the balloon tip appears.
If this parameter is set to "false", a sound will be made when the balloon tip appears.

The default value is "false".
		 */
		showBalloonTip(strTitleIcon: string, strTitle: string, strText: string, bNoSound?: boolean): null;
	}
}

