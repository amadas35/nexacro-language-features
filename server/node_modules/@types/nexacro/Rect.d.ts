// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 4.3;
    
interface NexacroAPI {
    Rect: nexacro.Rect;
}

    
declare namespace nexacro {
    
	interface Rect  {
	    /**
		 * @constructor
		 */
		new(): nexacro.Rect;
	    /**
		 * This property is used to specify the height of a Rect object.
		 */
		readonly height?: number;
		/**
		 * This property is used to specify the value of the point that indicates the position of a Rect object's left side.
		 */
		readonly left?: number;
		/**
		 * This property is used to specify the value of the point that indicates the position of a Rect object's top side.
		 */
		readonly top?: number;
		/**
		 * This property is used to specify the width of a Rect object.
		 */
		readonly width?: number;
		/**
		 * @param {number} v This property is used to specify the height of a Rect object.
		 * @returns {void} 
		 */
		set_height(v: number): void;
		/**
		 * @param {number} v This property is used to specify the value of the point that indicates the position of a Rect object's left side.
		 * @returns {void} 
		 */
		set_left(v: number): void;
		/**
		 * @param {number} v This property is used to specify the value of the point that indicates the position of a Rect object's top side.
		 * @returns {void} 
		 */
		set_top(v: number): void;
		/**
		 * @param {number} v This property is used to specify the width of a Rect object.
		 * @returns {void} 
		 */
		set_width(v: number): void;
		/**
		 * This method is used to initialize all the property values of a Rect object by making them 0.
		 */
		clear(): null;
		/**
		 * This method is used to return a new Rect object by copying the property values of the current Rect object.
		 * @returns {object} 
		 */
		clone(): object;
		/**
		 * This method is used to copy the property values of a Rect object delivered as an argument. The copied values will become the property values of the current Rect object.
		 * @param {object} objRect It is a Rect object whose property values will be copied as those of the current Rect object.
		 */
		copy(objRect: object): null;
		/**
		 * This method is used to return whether the current Rect object is the same as the Rect object delivered as an argument in terms of property values.
		 * @param {object} objRect It is a Rect object to compare with the current Rect object.
		 * @returns {boolean} 
		 */
		equals(objRect: object): boolean;
		/**
		 * This method returns the value of the point that indicates the position of a Rect object's bottom side.
		 * @returns {number} 
		 */
		getBottom(): number;
		/**
		 * This method returns the value of the point that indicates the position of a Rect object's right side.
		 * @returns {number} 
		 */
		getRight(): number;
		/**
		 * This method is used to return whether the current Rect object is the same as the Rect object delivered as an argument in width and height.
		 * @param {object} objRect It is a Rect object to compare with the current Rect object.
		 * @returns {boolean} 
		 */
		isSameSize(objRect: object): boolean;
	}
}

