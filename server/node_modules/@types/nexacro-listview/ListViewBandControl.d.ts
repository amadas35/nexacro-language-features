// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    _ListViewBandControl: nexacro.ListViewBandControl;
}

    
declare namespace nexacro {
    type ListViewBandControlOmitKeys = 'accessibilityaction'|'accessibilitydesclevel'|'accessibilitydescription'|'accessibilityenable'|'accessibilitylabel'|'accessibilityrole'|'bottom'|'boxShadow'|'enable'|'enableevent'|'expr'|'hotkey'|'id'|'initvalueid'|'left'|'maxheight'|'maxwidth'|'minheight'|'minwidth'|'padding'|'textAlign'|'textDecoration'|'verticalAlign'|'wordWrap'|'parent'|'positionstep'|'right'|'rtl'|'taborder'|'tabstop'|'text'|'top'|'visible'|'addEvent'|'addEventHandler'|'addEventHandlerLookup'|'bringToFront'|'bringToPrev'|'clearEventHandler'|'destroy'|'findEventHandler'|'getDisplayText'|'getEventHandler'|'getFocus'|'getOffsetBottom'|'getOffsetHeight'|'getOffsetLeft'|'getOffsetRight'|'getOffsetTop'|'getOffsetWidth'|'getPixelBottom'|'getPixelHeight'|'getPixelLeft'|'getPixelRight'|'getPixelTop'|'getPixelWidth'|'init'|'insertEventHandler'|'move'|'moveToNext'|'moveToPrev'|'removeEvent'|'removeEventHandler'|'removeEventHandlerLookup'|'resize'|'sendToBack'|'sendToNext'|'setEventHandler'|'setEventHandlerLookup'|'setFocus'|'setOffsetBottom'|'setOffsetHeight'|'setOffsetLeft'|'setOffsetRight'|'setOffsetTop'|'setOffsetWidth'|'show'|'onclick'|'oncontextmenu'|'ondblclick'|'ondrag'|'ondragenter'|'ondragleave'|'ondragmove'|'ondrop'|'oninput'|'onkeydown'|'onkeyup'|'onkillfocus'|'onlbuttondown'|'onlbuttonup'|'onmousedown'|'onmouseenter'|'onmouseleave'|'onmousemove'|'onmouseup'|'onmousewheel'|'onmove'|'onrbuttondown'|'onrbuttonup'|'onsetfocus'|'onsize'|'ontouchend'|'ontouchmove'|'ontouchstart';
	
	interface ListViewBandControl extends Omit<nexacro.ComplexComponent, ListViewBandControlOmitKeys> {
	    /**
		 * @constructor
		 */
		new(): nexacro.ListViewBandControl;
	    /**
		 * This property is used to set the background of a ListViewBandControl.
		 */
		readonly background?: string;
		/**
		 * This property is used to set the shape of the corners of a ListViewBandControl.
		 */
		readonly borderRadius?: string;
		/**
		 * This property is used to set the color of the text displayed in a ListViewBandControl.
		 */
		readonly color?: string;
		/**
		 * This property is used to set the style of a ListViewBandControl by using a class defined in the relevant XCSS file.
		 */
		readonly cssclass?: string;
		/**
		 * This property is used to set the type of a mouse pointer that appears when the mouse cursor is located in a ListViewBandControl.
		 */
		readonly cursor?: nexacro.Enum.CursorType;
		/**
		 * This property is used to size an Expand bar, which is situated at the right end of a ListViewBandControl.
		 */
		readonly expandbarsize?: number | `${number}` | `${number} ${number}`;
		/**
		 * This property determines whether to display an Expand bar at the right end of a ListViewBandControl.
		 */
		readonly expandbartype?: boolean;
		/**
		 * This property sets a font used for a ListViewBandControl.
		 */
		readonly font?: string;
		/**
		 * This property is used to set the height of a ListViewBandControl.
		 */
		readonly height?: number | nexacro.Unit.PixelPercent;
		/**
		 * This property is used to set the spacing between characters (kerning) displayed in a ListViewBandControl.
		 */
		readonly letterSpacing?: nexacro.Unit.PixelNegative;
		/**
		 * This property is used to specify the name of a ListViewBandControl.
		 */
		readonly name?: string;
		/**
		 * This property is used to set the border of a ListViewBandControl.
		 */
		readonly border?: string;
		/**
		 * This property is used to set the image of the edges that are displayed inside the border of a ListViewBandControl.
		 */
		readonly edge?: string;
		/**
		 * This property is used to set the opacity of a ListViewBandControl.
		 */
		readonly opacity?: number;
		/**
		 * This property is used to specify the text of a tooltip that appears when a mouse pointer hovers over a ListViewBandControl.
		 */
		readonly tooltiptext?: string;
		/**
		 * This property is used to define the position and type of a tooltip that appears in a ListViewBandControl.
		 */
		readonly tooltiptype?: nexacro.Enum.TooltipType;
		/**
		 * This property is used to set the width of a ListViewBandControl.
		 */
		readonly width?: number | nexacro.Unit.PixelPercent;
		/**
		 * This property is used to set the spacing between words displayed in a ListViewBandControl.
		 */
		readonly wordSpacing?: nexacro.Unit.PixelNegative;
		/**
		 * @param {string} v This property is used to set the background of a ListViewBandControl.
		 * @returns {void} 
		 */
		set_background(v: string): void;
		/**
		 * @param {string} v This property is used to set the shape of the corners of a ListViewBandControl.
		 * @returns {void} 
		 */
		set_borderRadius(v: string): void;
		/**
		 * @param {string} v This property is used to set the color of the text displayed in a ListViewBandControl.
		 * @returns {void} 
		 */
		set_color(v: string): void;
		/**
		 * @param {string} v This property is used to set the style of a ListViewBandControl by using a class defined in the relevant XCSS file.
		 * @returns {void} 
		 */
		set_cssclass(v: string): void;
		/**
		 * @param {nexacro.Enum.CursorType} v This property is used to set the type of a mouse pointer that appears when the mouse cursor is located in a ListViewBandControl.
		 * @returns {void} 
		 */
		set_cursor(v: nexacro.Enum.CursorType): void;
		/**
		 * @param {(number | `${number}` | `${number} ${number}`)} v This property is used to size an Expand bar, which is situated at the right end of a ListViewBandControl.
		 * @returns {void} 
		 */
		set_expandbarsize(v: number | `${number}` | `${number} ${number}`): void;
		/**
		 * @param {boolean} v This property determines whether to display an Expand bar at the right end of a ListViewBandControl.
		 * @returns {void} 
		 */
		set_expandbartype(v: boolean): void;
		/**
		 * @param {string} v This property sets a font used for a ListViewBandControl.
		 * @returns {void} 
		 */
		set_font(v: string): void;
		/**
		 * @param {(number | nexacro.Unit.PixelPercent)} v This property is used to set the height of a ListViewBandControl.
		 * @returns {void} 
		 */
		set_height(v: number | nexacro.Unit.PixelPercent): void;
		/**
		 * @param {(number|nexacro.Unit.PixelNegative)} v This property is used to set the spacing between characters (kerning) displayed in a ListViewBandControl.
		 * @returns {void} 
		 */
		set_letterSpacing(v: number|nexacro.Unit.PixelNegative): void;
		/**
		 * @param {string} v This property is used to specify the name of a ListViewBandControl.
		 * @returns {void} 
		 */
		set_name(v: string): void;
		/**
		 * @param {string} v This property is used to set the border of a ListViewBandControl.
		 * @returns {void} 
		 */
		set_border(v: string): void;
		/**
		 * @param {string} v This property is used to set the image of the edges that are displayed inside the border of a ListViewBandControl.
		 * @returns {void} 
		 */
		set_edge(v: string): void;
		/**
		 * @param {number} v This property is used to set the opacity of a ListViewBandControl.
		 * @returns {void} 
		 */
		set_opacity(v: number): void;
		/**
		 * @param {string} v This property is used to specify the text of a tooltip that appears when a mouse pointer hovers over a ListViewBandControl.
		 * @returns {void} 
		 */
		set_tooltiptext(v: string): void;
		/**
		 * @param {nexacro.Enum.TooltipType} v This property is used to define the position and type of a tooltip that appears in a ListViewBandControl.
		 * @returns {void} 
		 */
		set_tooltiptype(v: nexacro.Enum.TooltipType): void;
		/**
		 * @param {(number | nexacro.Unit.PixelPercent)} v This property is used to set the width of a ListViewBandControl.
		 * @returns {void} 
		 */
		set_width(v: number | nexacro.Unit.PixelPercent): void;
		/**
		 * @param {(number|nexacro.Unit.PixelNegative)} v This property is used to set the spacing between words displayed in a ListViewBandControl.
		 * @returns {void} 
		 */
		set_wordSpacing(v: number|nexacro.Unit.PixelNegative): void;
	}
}

