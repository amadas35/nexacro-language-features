// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    FileDialog: nexacro.FileDialog;
}

    
declare namespace nexacro {
    type FileDialogOmitKeys = 'id'|'addEventHandler'|'addEventHandlerLookup'|'clearEventHandler'|'findEventHandler'|'getEventHandler'|'removeEventHandler'|'removeEventHandlerLookup'|'setEventHandler'|'setEventHandlerLookup';
	
	interface FileDialog extends Omit<nexacro.EventSinkObject, FileDialogOmitKeys> {
	    /**
		 * @constructor
		 */
		new(): nexacro.FileDialog;
	    /**
		 * This property is used to set the file types applicable to a FileDialog in the web browser environment.
		 */
		readonly accept?: string;
		/**
		 * This property determines whether to automatically attach a selected extension to the names of the files in a FileDialog.
		 */
		readonly defaultextension?: boolean;
		/**
		 * This property is used to set the file types applicable to a FileDialog.
		 */
		readonly filter?: string;
		/**
		 * This property is used to determine the default file type presented by a FileDialog by specifying an index number.
		 */
		readonly filterindex?: number;
		/**
		 * This property is used to specify the name of a FileDialog.
		 */
		readonly name?: string;
		/**
		 * This read-only property holds the parent object of a FileDialog.
		 */
		readonly parent?: object;
		readonly SELFOLDER?: any;
		/**
		 * This event occurs when a FileDialog is closed.
		 */
		readonly onclose?: nexacro.EventObject<nexacro.FileDialog, nexacro.FileDialogEventInfo>;
		/**
		 * @param {string} v This property is used to set the file types applicable to a FileDialog in the web browser environment.
		 * @returns {void} 
		 */
		set_accept(v: string): void;
		/**
		 * @param {boolean} v This property determines whether to automatically attach a selected extension to the names of the files in a FileDialog.
		 * @returns {void} 
		 */
		set_defaultextension(v: boolean): void;
		/**
		 * @param {string} v This property is used to set the file types applicable to a FileDialog.
		 * @returns {void} 
		 */
		set_filter(v: string): void;
		/**
		 * @param {number} v This property is used to determine the default file type presented by a FileDialog by specifying an index number.
		 * @returns {void} 
		 */
		set_filterindex(v: number): void;
		/**
		 * @param {string} v This property is used to specify the name of a FileDialog.
		 * @returns {void} 
		 */
		set_name(v: string): void;
		/**
		 * This method is used to display a FileDialog.
		 * @param {string} strTitle This is a string that is displayed on the title bar of a FileDialog.

* This property does not apply to the macOS NRE and web runtime environment.
		 * @param {any} constOpenMode This parameter defines the type of the FileDialog to open.

If you specify "FileDialog.LOAD" or 1, this method will open a FileDialog that can read a single file.
If you specify "FileDialog.SAVE" or 2, this method will open a FileDialog that can save a single file.
If you specify "FileDialog.MULTILOAD" or 3, this method will open a FileDialog that can read multiple files.
If you specify "FileDialog.SELFOLDER" or 4, this method will open a FileDialog that can select a folder.

If you specify an invalid value, the value "FileDialog.LOAD" will be applied.

* In the desktop WRE, you can apply only the "FileDialog.LOAD" and "FileDialog.MULTILOAD" options.
* In the mobile environment, you can only apply the "FileDialog.MULTILOAD" option to the iOS/iPadOS default web browser.
		 * @param {string} strInitialPath This parameter defines the folder that will be selected by default when a FileDialog is opened.

For specifying a path, you can use either an absolute path or an alias.

* This parameter is not applied in web runtime environment.
		 * @param {string} strFileName This parameter defines the name of a file that will be designated by default when a FileDialog is displayed.

When the constOpenMode parameter is set to "FileDialog.SELFOLDER", this parameter will be ignored.

* This parameter is not applied in web runtime environment.
		 * @param {number} nWidth This is a number representing the width of the FileDialog, expressed in pixel.

If you specify a number smaller than 648 or do not set this parameter, the value of this parameter will be either 648 or the last-displayed width.
If you specify a value bigger than the width of the monitor, the monitor's width will be set as a value of this parameter.

* This parameter is applicable only to the Windows NRE.
		 * @param {number} nHeight This is a number representing the height of the FileDialog, expressed in pixel.

If you specify a number smaller than 356 or do not set this parameter, the value of this parameter will be either 356 or the last-displayed height.
If you specify a value bigger than the height of the monitor, the monitor's height will be set as a value of this parameter.

* This parameter is applicable only to the Windows NRE.
		 * @returns {boolean} 
		 */
		open(strTitle: string, constOpenMode: any, strInitialPath?: string, strFileName?: string, nWidth?: number, nHeight?: number): boolean;
	}
}

