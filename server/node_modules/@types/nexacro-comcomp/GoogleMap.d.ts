// Type definitions for Nexacro N
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.8;
    
interface NexacroAPI {
    GoogleMap: nexacro.GoogleMap;
}

    
declare namespace nexacro {
    type GoogleMapOmitKeys = 'background'|'borderRadius'|'boxShadow'|'color'|'cssclass'|'cursor'|'enableevent'|'expr'|'font'|'hotkey'|'id'|'letterSpacing'|'edge'|'padding'|'-nexa-rtl-background-image'|'-nexa-rtl-edge-image'|'textAlign'|'textDecoration'|'verticalAlign'|'wordWrap'|'opacity'|'rtl'|'tabstop'|'text'|'tooltiptext'|'tooltiptype'|'wordSpacing'|'addEvent'|'addEventHandler'|'addEventHandlerLookup'|'bringToFront'|'bringToPrev'|'clearEventHandler'|'findEventHandler'|'getDisplayText'|'getEventHandler'|'getFocus'|'getOffsetBottom'|'getOffsetHeight'|'getOffsetLeft'|'getOffsetRight'|'getOffsetTop'|'getOffsetWidth'|'getPixelBottom'|'getPixelHeight'|'getPixelLeft'|'getPixelRight'|'getPixelTop'|'getPixelWidth'|'insertEventHandler'|'moveToNext'|'moveToPrev'|'removeEvent'|'removeEventHandler'|'removeEventHandlerLookup'|'sendToBack'|'sendToNext'|'setEventHandler'|'setEventHandlerLookup'|'setFocus'|'setOffsetBottom'|'setOffsetHeight'|'setOffsetLeft'|'setOffsetRight'|'setOffsetTop'|'setOffsetWidth'|'oncontextmenu'|'ondblclick'|'ondrag'|'ondragenter'|'ondragleave'|'ondragmove'|'ondrop'|'oninput'|'onkeydown'|'onkeyup'|'onkillfocus'|'onlbuttondown'|'onlbuttonup'|'onmousedown'|'onmouseenter'|'onmouseleave'|'onmousemove'|'onmouseup'|'onmousewheel'|'onmove'|'onrbuttondown'|'onrbuttonup'|'onsetfocus'|'onsize'|'ontouchend'|'ontouchmove'|'ontouchstart';
	
	interface GoogleMap extends Omit<nexacro.Component, GoogleMapOmitKeys> {
	    /**
		 * @constructor
		 */
		new(): nexacro.GoogleMap;
	    /**
		 * This property is used to specify the action printed as an accessibility feature when a selection box moves to a GoogleMap.
		 */
		readonly accessibilityaction?: string;
		/**
		 * This property is used to determine whether to print accessibility features of the children when a selection box moves to a GoogleMap.
		 */
		readonly accessibilitydesclevel?: nexacro.Enum.DescLevel;
		/**
		 * This property is used to specify the description printed as an accessibility feature when a selection box moves to a GoogleMap.
		 */
		readonly accessibilitydescription?: string;
		/**
		 * This property is used to determine whether to print the values of accessibility-related properties when a selection box moves to a GoogleMap.
		 */
		readonly accessibilityenable?: boolean;
		/**
		 * This property is used to specify the label printed as an accessibility feature when a selection box moves to a GoogleMap.
		 */
		readonly accessibilitylabel?: string;
		/**
		 * This property is used to set the role of a GoogleMap. The role is printed as accessibility functionality when a selection box moves to the component.
		 */
		readonly accessibilityrole?: nexacro.Enum.Role;
		/**
		 * This property sets an API key used when a GoogleMap loads a map.
		 */
		readonly apikey?: string;
		/**
		 * This property is used to specify the value of the point that indicates the position of a GoogleMap's bottom side.
		 */
		readonly bottom?: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`;
		/**
		 * This property is used to determine whether to enable a GoogleMap.
		 */
		readonly enable?: boolean;
		/**
		 * This property is used to specify the height of a GoogleMap.
		 */
		readonly height?: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`;
		/**
		 * This property is used to set the ID of an InitValue to be applied to an GoogleMap.
		 */
		readonly initvalueid?: string;
		/**
		 * This read-only property holds an array that contains the items displayed on a GoogleMap.
		 */
		readonly items?: object;
		/**
		 * This property is used to set a language applied to a GoogleMap.
		 */
		readonly language?: string;
		/**
		 * This read-only property holds the latitude of the center of a map that is loaded onto a GoogleMap component.
		 */
		readonly latitude?: number;
		/**
		 * This property is used to specify the value of the point that indicates the position of a GoogleMap's left side.
		 */
		readonly left?: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`;
		/**
		 * This read-only property holds the longitude of the center of a map that is loaded onto a GoogleMap component.
		 */
		readonly longitude?: number;
		/**
		 * This property is used to set the maximum height of a GoogleMap for the component to be displayed on the screen.
		 */
		readonly maxheight?: number;
		/**
		 * This property is used to set the maximum width of a GoogleMap for the component to be displayed on the screen.
		 */
		readonly maxwidth?: number;
		/**
		 * This property is used to set the minimum height of a GoogleMap for the component to be displayed on the screen.
		 */
		readonly minheight?: number;
		/**
		 * This property is used to set the minimum width of a GoogleMap for the component to be displayed on the screen.
		 */
		readonly minwidth?: number;
		/**
		 * This property is used to specify the name of a GoogleMap.
		 */
		readonly name?: string;
		/**
		 * This property is used to set the border of a GoogleMap.
		 */
		readonly border?: string;
		/**
		 * This read-only property holds the parent object of a GoogleMap.
		 */
		readonly parent?: object;
		/**
		 * This property is used to specify the index number of a step page where a GoogleMap is displayed if the parent object uses the step feature.
		 */
		readonly positionstep?: number;
		/**
		 * This property is used to set a region applied to a GoogleMap.
		 */
		readonly region?: string;
		/**
		 * This property is used to specify the value of the point that indicates the position of a GoogleMap's right side.
		 */
		readonly right?: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`;
		/**
		 * This property determines whether to show a control for a zoom feature.
		 */
		readonly showzoom?: boolean;
		/**
		 * This property is used to define the tab order number of a GoogleMap. Tab order means the order of moving focus among components when the focus is moved by entering the tab key.
		 */
		readonly taborder?: number;
		/**
		 * This property is used to specify the value of the point that indicates the position of a GoogleMap's top side.
		 */
		readonly top?: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`;
		/**
		 * This read-only property holds a value that indicates the status of the map loaded onto a GoogleMap component.
		 */
		readonly viewmode?: number;
		/**
		 * This property is used to determine whether to make a GoogleMap visible or not.
		 */
		readonly visible?: boolean;
		/**
		 * This property is used to set the width of a GoogleMap.
		 */
		readonly width?: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`;
		/**
		 * This read-only property holds the zoom level of the map loaded onto a GoogleMap component.
		 */
		readonly zoomlevel?: number;
		/**
		 * This event occurs when you click or touch a GoogleMap component.
		 */
		readonly onclick?: nexacro.EventObject<nexacro.GoogleMap, nexacro.GoogleMapClickEventInfo>;
		/**
		 * This event occurs when a GoogleMap fails to work properly.
		 */
		readonly onerror?: nexacro.EventObject<nexacro.GoogleMap, nexacro.GoogleMapErrorEventInfo>;
		/**
		 * This event occurs when a map is loaded onto a GoogleMap.
		 */
		readonly onload?: nexacro.EventObject<nexacro.GoogleMap, nexacro.GoogleMapEventInfo>;
		/**
		 * This event occurs when you are in the process of dragging a GoogleMapMarker on a GoogleMap.
		 */
		readonly onmapdrag?: nexacro.EventObject<nexacro.GoogleMap, nexacro.GoogleMapDragEventInfo>;
		/**
		 * This event occurs when you release a GoogleMapMarker that has been dragged in a GoogleMap.
		 */
		readonly onmapdragend?: nexacro.EventObject<nexacro.GoogleMap, nexacro.GoogleMapDragEventInfo>;
		/**
		 * This event occurs when you begin to drag a GoogleMapMarker on a GoogleMap.
		 */
		readonly onmapdragstart?: nexacro.EventObject<nexacro.GoogleMap, nexacro.GoogleMapDragEventInfo>;
		/**
		 * This event occurs when the getAddress() method of a GoogleMap is conducted successfully.
		 */
		readonly onrecvsuccess?: nexacro.EventObject<nexacro.GoogleMap, nexacro.GoogleMapEventInfo>;
		/**
		 * @param {string} v This property is used to specify the action printed as an accessibility feature when a selection box moves to a GoogleMap.
		 * @returns {void} 
		 */
		set_accessibilityaction(v: string): void;
		/**
		 * @param {nexacro.Enum.DescLevel} v This property is used to determine whether to print accessibility features of the children when a selection box moves to a GoogleMap.
		 * @returns {void} 
		 */
		set_accessibilitydesclevel(v: nexacro.Enum.DescLevel): void;
		/**
		 * @param {string} v This property is used to specify the description printed as an accessibility feature when a selection box moves to a GoogleMap.
		 * @returns {void} 
		 */
		set_accessibilitydescription(v: string): void;
		/**
		 * @param {boolean} v This property is used to determine whether to print the values of accessibility-related properties when a selection box moves to a GoogleMap.
		 * @returns {void} 
		 */
		set_accessibilityenable(v: boolean): void;
		/**
		 * @param {string} v This property is used to specify the label printed as an accessibility feature when a selection box moves to a GoogleMap.
		 * @returns {void} 
		 */
		set_accessibilitylabel(v: string): void;
		/**
		 * @param {nexacro.Enum.Role} v This property is used to set the role of a GoogleMap. The role is printed as accessibility functionality when a selection box moves to the component.
		 * @returns {void} 
		 */
		set_accessibilityrole(v: nexacro.Enum.Role): void;
		/**
		 * @param {string} v This property sets an API key used when a GoogleMap loads a map.
		 * @returns {void} 
		 */
		set_apikey(v: string): void;
		/**
		 * @param {(number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`)} v This property is used to specify the value of the point that indicates the position of a GoogleMap's bottom side.
		 * @returns {void} 
		 */
		set_bottom(v: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`): void;
		/**
		 * @param {boolean} v This property is used to determine whether to enable a GoogleMap.
		 * @returns {void} 
		 */
		set_enable(v: boolean): void;
		/**
		 * @param {(number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`)} v This property is used to specify the height of a GoogleMap.
		 * @returns {void} 
		 */
		set_height(v: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`): void;
		/**
		 * @param {string} v This property is used to set a language applied to a GoogleMap.
		 * @returns {void} 
		 */
		set_language(v: string): void;
		/**
		 * @param {(number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`)} v This property is used to specify the value of the point that indicates the position of a GoogleMap's left side.
		 * @returns {void} 
		 */
		set_left(v: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`): void;
		/**
		 * @param {number} v This property is used to set the maximum height of a GoogleMap for the component to be displayed on the screen.
		 * @returns {void} 
		 */
		set_maxheight(v: number): void;
		/**
		 * @param {number} v This property is used to set the maximum width of a GoogleMap for the component to be displayed on the screen.
		 * @returns {void} 
		 */
		set_maxwidth(v: number): void;
		/**
		 * @param {number} v This property is used to set the minimum height of a GoogleMap for the component to be displayed on the screen.
		 * @returns {void} 
		 */
		set_minheight(v: number): void;
		/**
		 * @param {number} v This property is used to set the minimum width of a GoogleMap for the component to be displayed on the screen.
		 * @returns {void} 
		 */
		set_minwidth(v: number): void;
		/**
		 * @param {string} v This property is used to specify the name of a GoogleMap.
		 * @returns {void} 
		 */
		set_name(v: string): void;
		/**
		 * @param {string} v This property is used to set the border of a GoogleMap.
		 * @returns {void} 
		 */
		set_border(v: string): void;
		/**
		 * @param {number} v This property is used to specify the index number of a step page where a GoogleMap is displayed if the parent object uses the step feature.
		 * @returns {void} 
		 */
		set_positionstep(v: number): void;
		/**
		 * @param {string} v This property is used to set a region applied to a GoogleMap.
		 * @returns {void} 
		 */
		set_region(v: string): void;
		/**
		 * @param {(number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`)} v This property is used to specify the value of the point that indicates the position of a GoogleMap's right side.
		 * @returns {void} 
		 */
		set_right(v: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`): void;
		/**
		 * @param {boolean} v This property determines whether to show a control for a zoom feature.
		 * @returns {void} 
		 */
		set_showzoom(v: boolean): void;
		/**
		 * @param {number} v This property is used to define the tab order number of a GoogleMap. Tab order means the order of moving focus among components when the focus is moved by entering the tab key.
		 * @returns {void} 
		 */
		set_taborder(v: number): void;
		/**
		 * @param {(number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`)} v This property is used to specify the value of the point that indicates the position of a GoogleMap's top side.
		 * @returns {void} 
		 */
		set_top(v: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`): void;
		/**
		 * @param {boolean} v This property is used to determine whether to make a GoogleMap visible or not.
		 * @returns {void} 
		 */
		set_visible(v: boolean): void;
		/**
		 * @param {(number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`)} v This property is used to set the width of a GoogleMap.
		 * @returns {void} 
		 */
		set_width(v: number | nexacro.Unit.PixelPercent | `${string}:${nexacro.Unit.PixelPercent}`): void;
		/**
		 * This method is used to add an item to mark on a GoogleMap.
		 * @param {string} strItemID This is a string that represents the ID of an item.
		 * @param {object} objItem This is an object you want to mark on the GoogleMap.

You can select between the GoogleMapMarker, GoogleMapPolyline and GoogleMapPolygon objects.
		 * @returns {boolean} 
		 */
		addItem(strItemID: string, objItem: object): boolean;
		/**
		 * This method is used to delete a GoogleMap that is dynamically created through a script.
		 * @returns {boolean} 
		 */
		destroy(): boolean;
		/**
		 * This method returns the registered addresses of given coordinates (latitude and longitude) on a GoogleMap.
		 * @param {number} nLatitude This is a number representing the latitude of a location whose address will be searched for.
		 * @param {number} nLongitude This is a number representing the longitude of a location whose address will be searched for.
		 * @param {number} nMaxResultCount This parameter sets the maximum number of addresses to be returned.

The default value is 1.
An error will occur if the specified number is 0 or less.
		 * @param {string} enumLocale This parameter sets the language used to show returned addresses.

"ko" for Korean language
"en" for English language
"ja" for Japanese language

If you omit this parameter, the current system locale will be applied.
		 * @returns {boolean} 
		 */
		getAddress(nLatitude: number, nLongitude: number, nMaxResultCount?: number, enumLocale?: string): boolean;
		/**
		 * This method returns the coordinates (latitude and longitude) of a certain address on a GoogleMap.
		 * @param {string} strAddress This is a string representing an address that will be converted into coordinates (latitude and longitude).
		 * @returns {boolean} 
		 */
		getCoordinates(strAddress: string): boolean;
		/**
		 * This method is used to initialize a GoogleMap after creating it in a script dynamically.
		 * @param {string} strName It sets the ID of a GoogleMap in the form of a string.
		 * @param {(string|number)} vLeft It specifies the value of the left property of a GoogleMap in pixel or percent (%).

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be determined based on the right property of the base component.
If you use a percentage (%) as an unit, this parameter will be determined based on the width property of the base component.
		 * @param {(string|number)} vTop It specifies the value of the top property of a GoogleMap in pixel or percent (%).

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be determined based on the bottom property of the base component.
If you use a percentage (%) as an unit, this parameter will be determined based on the height property of the base component.
		 * @param {(string|number)} vWidth It specifies the value of the width property of a GoogleMap in pixel or percent (%).

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be specified in pixel while the base component will be ignored.
If you use a percentage (%) as an unit, this parameter will be determined based on the width property of the base component.
		 * @param {(string|number)} vHeight It specifies the value of the height property of a GoogleMap in pixel or percent (%).

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be specified in pixel while the base component will be ignored.
If you use a percentage (%) as an unit, this parameter will be determined based on the height property of the base component.
		 * @param {(string|number)} vRight It specifies the value of the right property of a GoogleMap in pixel or percent (%).

This parameter will be ignored if both the vLeft and vWidth parameters are all specified.

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be determined based on the left property of the base component.
If you use a percentage (%) as an unit, this parameter will be determined based on the width property of the base component.
		 * @param {(string|number)} vBottom It specifies the value of the bottom property of a GoogleMap in pixel or percent (%).

This parameter will be ignored if both the vTop and vHeight parameters are all specified.

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be determined based on the top property of the base component.
If you use a percentage (%) as an unit, this parameter will be determined based on the height property of the base component.
		 * @param {(string|number)} vMinWidth It specifies a GoogleMap's minimum width that can be displayed in the Form.
		 * @param {(string|number)} vMaxWidth It specifies a GoogleMap's maximum width that can be displayed in the Form.

If this value is smaller than vMinWidth, it will be replaced by the value of vMinWidth.
		 * @param {(string|number)} vMinHeight It specifies a GoogleMap's minimum height that can be displayed in the Form.
		 * @param {(string|number)} vMaxHeight It specifies a GoogleMap's maximum height that can be displayed in the Form.

If this value is smaller than vMinHeight, it will be replaced by the value of vMinHeight.
		 */
		init(strName: string, vLeft: string|number, vTop: string|number, vWidth: string|number, vHeight: string|number, vRight?: string|number, vBottom?: string|number, vMinWidth?: string|number, vMaxWidth?: string|number, vMinHeight?: string|number, vMaxHeight?: string|number): null;
		/**
		 * This method is used to load a map on a GoogleMap.
		 * @param {boolean} bUseSensor This parameter determines whether to use the GPS information.

For "true", a loaded map will be determined based on the GPS information.
For "false", GPS information will not be used.

The default value is "false".

* If this parameter is set to "true" with the mobile device not permitting the use of GPS information, the onerror event will occur.
   If this parameter is set to "true" with the mobile device permitting the use of GPS information, a dialog for permission may appear once or more.
		 * @param {number} nLatitude This is a number representing the latitude of a loaded map.

The default value is 0.
		 * @param {number} nLongitude This is a number representing the longitude of a loaded map.

The default value is 0.
		 * @param {number} constViewMode This parameter is used to set the map type.

For "0", the GoogleMap displays a normal road map.
For "1", the GoogleMap displays a satellite image.
For "2", the GoogleMap displays a satellite image with a transparent layer of major roads.
For "3", the GoogleMap displays terrain information with a transparent layer of major roads. Terrain information includes topography and vegetation.

The default value is 0.
		 * @param {number} nZoomLevel This is an integer larger than 0, representing the zoom level of a loaded map.
		 * @returns {boolean} 
		 */
		load(bUseSensor?: boolean, nLatitude?: number, nLongitude?: number, constViewMode?: number, nZoomLevel?: number): boolean;
		/**
		 * This method is used to change the position and size of a GoogleMap.
		 * @param {(string|number)} vLeft This parameter defines the value of the left property of a GoogleMap in pixel or percent (%).

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be determined based on the right property of the base component.
If you use a percentage (%) as an unit, this parameter will be determined based on the width property of the base component.
		 * @param {(string|number)} vTop This parameter defines the value of the top property of a GoogleMap in pixel or percent (%).

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be determined based on the bottom property of the base component.
If you use a percentage (%) as an unit, this parameter will be determined based on the height property of the base component.
		 * @param {(string|number)} vWidth This parameter defines the value of the width property of a GoogleMap in pixel or percent (%).

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be specified in pixel while the base component will be ignored.
If you use a percentage (%) as an unit, this parameter will be determined based on the width property of the base component.
		 * @param {(string|number)} vHeight This parameter defines the value of the height property of a GoogleMap in pixel or percent (%).

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be specified in pixel while the base component will be ignored.
If you use a percentage (%) as an unit, this parameter will be determined based on the height property of the base component.
		 * @param {(string|number)} vRight This parameter defines the value of the right property of a GoogleMap in pixel or percent (%).

This parameter will be ignored if both the vLeft and vWidth parameters are all defined.

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be determined based on the left property of the base component.
If you use a percentage (%) as an unit, this parameter will be determined based on the width property of the base component.
		 * @param {(string|number)} vBottom This parameter defines the value of the bottom property of a GoogleMap in pixel or percent (%).

This parameter will be ignored if both the vTop and vHeight parameters are all defined.

* When you include a base component in the argument:
If you use a pixel as an unit, this parameter will be determined based on the top property of the base component.
If you use a percentage (%) as an unit, this parameter will be determined based on the height property of the base component.
		 */
		move(vLeft: string|number, vTop: string|number, vWidth?: string|number, vHeight?: string|number, vRight?: string|number, vBottom?: string|number): null;
		/**
		 * This method is used to remove an item displayed on a GoogleMap.
		 * @param {string} strItemID This is a string that represents the ID of an item that will be removed.
		 * @returns {boolean} 
		 */
		removeItem(strItemID: string): boolean;
		/**
		 * This method is used to change the size of a GoogleMap.
		 * @param {(string|number)} vWidth This is the width of the GoogleMap, specified in pixel or percentage (%).
You cannot specify a negative number.

* When you set this parameter with a base component set:
If you specify a number in pixel, the specified number will be the width while the base component is ignored.
If you specify a number in percentage, the width of the GoogleMap will be determined in proportion to the width of the base component.
		 * @param {(string|number)} vHeight This is the height of the GoogleMap, specified in pixel or percentage (%).
You cannot specify a negative number.

* When you set this parameter with a base component set:
If you specify a number in pixel, the specified number will be the height while the base component is ignored.
If you specify a number in percentage, the height of the GoogleMap will be determined in proportion to the height of the base component.
		 */
		resize(vWidth: string|number, vHeight: string|number): null;
		/**
		 * This method is used to display a GoogleMap on the screen. The GoogleMap mentioned here refers to the one that is dynamically created through a script.
		 */
		show(): null;
	}
}

